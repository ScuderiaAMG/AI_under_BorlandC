 
 #include<huatu1.h>
 #include<Bezier.h>
 #include<draw.h>
 #include<stdio.h>
 #include<string.h>
 #include<alloc.h>
 #include<stdlib.h>
 #include<color.h>
 #include<graphics.h>
 #include<stdarg.h>
 #include<conio.h>
 #include<Bezier.h>
 #include<xiezi.h>
 #include<dos.h>
 #include<stddef.h>
 #include<mouse.h>
 #include<dog.h>
 
 //上：70
 //下：470
 //左：216
 //右：610 
 
 //画图原点位于（414，245） 
 void dog_body(int x,int y,float k,int color,int page,int j)
 {
 	int x0[432];
 	int y0[432];
 	int i;
 	
 	//严格记录图形所在区域 
 	int posi[4]={0};
 	
 	posi[0]=70;//上 
 	posi[1]=470;//下 
 	posi[2]=216;//左 
 	posi[3]=610;//右 
 	

 	x=x-414;
 	y=y-245;
 	
 	int h=(k*(x+500)-(x+414)*(k-1))*2;
	 	
 	x0[0]=k*(x+414);
 	y0[0]=k*(y+245);
 	
 	x0[1]=k*(x+406);
 	y0[1]=k*(y+252);
 	
 	x0[2]=k*(x+402);
 	y0[2]=k*(y+255);
 	
 	x0[3]=k*(x+398);
 	y0[3]=k*(y+256);
 	
 	x0[4]=k*(x+394);
 	y0[4]=k*(y+257);
 	
 	x0[5]=k*(x+386);
 	y0[5]=k*(y+259);
 	
 	x0[6]=k*(x+380);
 	y0[6]=k*(y+261);
 	
 	x0[7]=k*(x+362);
 	y0[7]=k*(y+262);
 	
 	x0[8]=k*(x+337);
 	y0[8]=k*(y+262);
 	
 	x0[9]=k*(x+326);
 	y0[9]=k*(y+261);
 	
 	x0[10]=k*(x+320);
 	y0[10]=k*(y+259);
 	
 	x0[11]=k*(x+314);
 	y0[11]=k*(y+258);
 	
 	x0[12]=k*(x+308);
 	y0[12]=k*(y+258);
 	
 	x0[13]=k*(x+299);
 	y0[13]=k*(y+258);
 	
 	x0[14]=k*(x+287);
 	y0[14]=k*(y+258);
 	
 	x0[15]=k*(x+279);
 	y0[15]=k*(y+258);
 	
 	x0[16]=k*(x+274);
 	y0[16]=k*(y+256);
 	
 	x0[17]=k*(x+266);
 	y0[17]=k*(y+243);
 	
 	x0[18]=k*(x+264);
 	y0[18]=k*(y+251);
 	
 	//尾巴 
 	x0[19]=k*(x+282);
 	y0[19]=k*(y+233);
 	
 	x0[20]=k*(x+280);
 	y0[20]=k*(y+224);
 	
 	x0[21]=k*(x+278);
 	y0[21]=k*(y+228);
 	
 	x0[22]=k*(x+272);
 	y0[22]=k*(y+216);
 	
 	x0[23]=k*(x+286);
 	y0[23]=k*(y+211);
 	
 	x0[24]=k*(x+294);
 	y0[24]=k*(y+209);
 	
 	x0[25]=k*(x+298);
 	y0[25]=k*(y+205);
 	
 	x0[26]=k*(x+299);
 	y0[26]=k*(y+204);
 	
 	x0[27]=k*(x+302);
 	y0[27]=k*(y+200);
 	
 	x0[28]=k*(x+304);
 	y0[28]=k*(y+197);
 	
 	x0[29]=k*(x+303);
 	y0[29]=k*(y+194);
 	
 	x0[30]=k*(x+300);
 	y0[30]=k*(y+191);
 	
 	x0[31]=k*(x+298);
 	y0[31]=k*(y+190);
 	
 	x0[32]=k*(x+296);
 	y0[32]=k*(y+189);
 	
 	x0[33]=k*(x+294);
 	y0[33]=k*(y+188);
 	
 	x0[34]=k*(x+292);
 	y0[34]=k*(y+187);
 	
 	x0[35]=k*(x+289);
 	y0[35]=k*(y+186);
 	
 	x0[36]=k*(x+287);
 	y0[36]=k*(y+186);
 	
 	x0[37]=k*(x+285);
 	y0[37]=k*(y+185);
 	
 	x0[38]=k*(x+283);
 	y0[38]=k*(y+184);
 	
 	x0[39]=k*(x+282);
 	y0[39]=k*(y+185);
 	
 	x0[40]=k*(x+279);
 	y0[40]=k*(y+186);
 	
 	x0[41]=k*(x+277);
 	y0[41]=k*(y+188);
 	
 	x0[42]=k*(x+276);
 	y0[42]=k*(y+190);
 	
 	x0[43]=k*(x+274);
 	y0[43]=k*(y+192);
 	
 	x0[44]=k*(x+263);
 	y0[44]=k*(y+194);
 	
 	x0[45]=k*(x+261);
 	y0[45]=k*(y+198);
 	
 	x0[46]=k*(x+263);
 	y0[46]=k*(y+201);
 	
 	x0[47]=k*(x+264);
 	y0[47]=k*(y+208);
 	
 	x0[48]=k*(x+267);
 	y0[48]=k*(y+212);
 	
 	x0[49]=k*(x+267);
 	y0[49]=k*(y+219);
 	
 	x0[50]=k*(x+268);
 	y0[50]=k*(y+227);
 	
 	x0[51]=k*(x+269);
 	y0[51]=k*(y+231);
 	
 	x0[52]=k*(x+272);
 	y0[52]=k*(y+238);
 	
 	x0[53]=k*(x+273);
 	y0[53]=k*(y+241);
 	
 	x0[54]=k*(x+275);
 	y0[54]=k*(y+245);
 	
 	x0[55]=k*(x+277);
 	y0[55]=k*(y+251);
 	
 	x0[56]=k*(x+280);
 	y0[56]=k*(y+255);
 	
 	x0[57]=k*(x+286);
 	y0[57]=k*(y+258);
 	
 	x0[58]=k*(x+284);
 	y0[58]=k*(y+260);
 	
 	x0[59]=k*(x+283);
 	y0[59]=k*(y+264);
 	
 	x0[60]=k*(x+275);
 	y0[60]=k*(y+268);
 	
 	x0[61]=k*(x+273);
 	y0[61]=k*(y+268);
 	
 	x0[62]=k*(x+272);
 	y0[62]=k*(y+268);
 	
 	x0[63]=k*(x+270);
 	y0[63]=k*(y+275);
 	
 	x0[64]=k*(x+265);
 	y0[64]=k*(y+279);
 	
 	x0[65]=k*(x+245);
 	y0[65]=k*(y+281);
 	
 	x0[66]=k*(x+245);
 	y0[66]=k*(y+283);
 	
 	x0[67]=k*(x+240);
 	y0[67]=k*(y+305);
 	
 	x0[68]=k*(x+239);
 	y0[68]=k*(y+308);
 	
 	x0[69]=k*(x+238);
 	y0[69]=k*(y+311);
 	
 	x0[70]=k*(x+237);
 	y0[70]=k*(y+315);
 	
 	x0[71]=k*(x+237);
 	y0[71]=k*(y+321);
 	
 	x0[72]=k*(x+236);
 	y0[72]=k*(y+330);
 	
 	x0[73]=k*(x+234);
 	y0[73]=k*(y+338);
 	
 	x0[74]=k*(x+233);
 	y0[74]=k*(y+344);
 	
 	x0[75]=k*(x+232);
 	y0[75]=k*(y+350);
 	
 	x0[76]=k*(x+232);
 	y0[76]=k*(y+355);
 	
 	x0[77]=k*(x+233);
 	y0[77]=k*(y+368);
 	
 	x0[78]=k*(x+235);
 	y0[78]=k*(y+375);
 	
 	x0[79]=k*(x+239);
 	y0[79]=k*(y+385);
 	
 	x0[80]=k*(x+240);
 	y0[80]=k*(y+389);
 	
 	x0[81]=k*(x+243);
 	y0[81]=k*(y+393);
 	
 	x0[82]=k*(x+245);
 	y0[82]=k*(y+394);
 	
 	x0[83]=k*(x+248);
 	y0[83]=k*(y+396);
 	
 	x0[84]=k*(x+252);
 	y0[84]=k*(y+391);
 	
 	x0[85]=k*(x+254);
 	y0[85]=k*(y+387);
 	
 	x0[86]=k*(x+256);
 	y0[86]=k*(y+383);
 	
 	x0[87]=k*(x+257);
 	y0[87]=k*(y+379);
 	
 	x0[88]=k*(x+259);
 	y0[88]=k*(y+373);
 	
 	x0[89]=k*(x+259);
 	y0[89]=k*(y+369);
 	
 	x0[90]=k*(x+260);
 	y0[90]=k*(y+363);
 	
 	x0[91]=k*(x+262);
 	y0[91]=k*(y+359);
 	
 	x0[92]=k*(x+264);
 	y0[92]=k*(y+355);
 	
 	x0[93]=k*(x+265);
 	y0[93]=k*(y+346);
 	
 	x0[94]=k*(x+268);
 	y0[94]=k*(y+343);
 	
 	x0[95]=k*(x+270);
 	y0[95]=k*(y+340);
 	
 	x0[96]=k*(x+273);
 	y0[96]=k*(y+335);
 	
 	x0[97]=k*(x+276);
 	y0[97]=k*(y+238);
 	
 	x0[98]=k*(x+280);
 	y0[98]=k*(y+300);
 	
 	x0[99]=k*(x+283);
 	y0[99]=k*(y+280);
 	
 	x0[100]=k*(x+285);
 	y0[100]=k*(y+282);
 	
 	x0[101]=k*(x+288);
 	y0[101]=k*(y+300);
 	
 	x0[102]=k*(x+293);
 	y0[102]=k*(y+302);
 	
 	
 	//左后腿 
 	x0[103]=k*(x+292);
 	y0[103]=k*(y+314);
 	
 	x0[104]=k*(x+290);
 	y0[104]=k*(y+318);
 	
 	x0[105]=k*(x+289);
 	y0[105]=k*(y+312);
 	
 	x0[106]=k*(x+287);
 	y0[106]=k*(y+316);
 	
 	
 	
 	x0[107]=k*(x+286);
 	y0[107]=k*(y+328);
 	
 	x0[108]=k*(x+285);
 	y0[108]=k*(y+324);
 	
 	x0[109]=k*(x+284);
 	y0[109]=k*(y+339);
 	
 	x0[110]=k*(x+285);
 	y0[110]=k*(y+352);
 	
 	x0[111]=k*(x+285);
 	y0[111]=k*(y+353);
 	
 	x0[112]=k*(x+283);
 	y0[112]=k*(y+354);
 	
 	x0[113]=k*(x+283);
 	y0[113]=k*(y+355);
 	
 	x0[114]=k*(x+283);
 	y0[114]=k*(y+356);
 	
 	x0[115]=k*(x+281);
 	y0[115]=k*(y+356);
 	
 	x0[116]=k*(x+280);
 	y0[116]=k*(y+358);
 	
 	x0[117]=k*(x+278);
 	y0[117]=k*(y+350);
 	
 	x0[118]=k*(x+278);
 	y0[118]=k*(y+342);
 	
 	x0[119]=k*(x+279);
 	y0[119]=k*(y+345);
 	
 	x0[120]=k*(x+280);
 	y0[120]=k*(y+349);
 	
 	x0[121]=k*(x+281);
 	y0[121]=k*(y+349);
 	
 	x0[122]=k*(x+279);
 	y0[122]=k*(y+352);
 	
 	x0[123]=k*(x+280);
 	y0[123]=k*(y+355);
 	
 	x0[124]=k*(x+280);
 	y0[124]=k*(y+358);
 	
 	x0[125]=k*(x+281);
 	y0[125]=k+(y+360);
 	
 	x0[126]=k*(x+283);
 	y0[126]=k*(y+362);
 	
 	x0[127]=k*(x+284);
 	y0[127]=k*(y+365);
 	
 	x0[128]=k*(x+286);
 	y0[128]=k*(y+366);
 	
 	x0[129]=k*(x+287);
 	y0[129]=k*(y+367);
 	
 	x0[130]=k*(x+289);
 	y0[130]=k*(y+366);
 	
 	x0[131]=k*(x+289);
 	y0[131]=k*(y+365);
 	
 	x0[132]=k*(x+289);
 	y0[132]=k*(y+366);
 	
 	x0[133]=k*(x+291);
 	y0[133]=k*(y+367);
 	
 	x0[134]=k*(x+292);
 	y0[134]=k*(y+367);
 	
 	x0[135]=k*(x+293);
 	y0[135]=k*(y+365);
 	
 	x0[136]=k*(x+293);
 	y0[136]=k*(y+364);
 	
 	x0[137]=k*(x+293);
 	y0[137]=k*(y+363);
 	
 	x0[138]=k*(x+293);
 	y0[138]=k*(y+363);
 	
 	x0[139]=k*(x+294);
 	y0[139]=k*(y+363);
 	
 	x0[140]=k*(x+296);
 	y0[140]=k*(y+361);
 	
 	x0[141]=k*(x+297);
 	y0[141]=k*(y+357);
 	
 	x0[142]=k*(x+297);
 	y0[142]=k*(y+354);
 	
 	x0[143]=k*(x+297);
 	y0[143]=k*(y+354);
 	
 	x0[144]=k*(x+298);
 	y0[144]=k*(y+351);
 	
 	x0[145]=k*(x+298);
 	y0[145]=k*(y+348);
 	
 	x0[146]=k*(x+298);
 	y0[146]=k*(y+345);
 	
 	x0[147]=k*(x+299);
 	y0[147]=k*(y+343);
 	 
 	
 	
 	x0[148]=k*(x+300);
 	y0[148]=k*(y+341);
 	
 	x0[149]=k*(x+301);
 	y0[149]=k*(y+339);
 	
 	x0[150]=k*(x+303);
 	y0[150]=k*(y+334);
 	
 	x0[151]=k*(x+304);
 	y0[151]=k*(y+329); 
 	
 	x0[152]=k*(x+306);
 	y0[152]=k*(y+330);
 	
 	x0[153]=k*(x+308);
 	y0[153]=k*(y+331);
 	
 	x0[154]=k*(x+309);
 	y0[154]=k*(y+331);
 	
 	x0[155]=k*(x+310);
 	y0[155]=k*(y+332);
 	
 	x0[156]=k*(x+312);
 	y0[156]=k*(y+333);
 	
 	x0[157]=k*(x+313);
 	y0[157]=k*(y+333);
 	
 	x0[158]=k*(x+316);
 	y0[158]=k*(y+336);
 	
 	x0[159]=k*(x+318);
 	y0[159]=k*(y+336);
 	
 	x0[160]=k*(x+322);
	y0[160]=k*(y+337);
	
	x0[161]=k*(x+324);
	y0[161]=k*(y+338);
	
	x0[162]=k*(x+326);
	y0[162]=k*(y+338);
	
	x0[163]=k*(x+330);
	y0[163]=k*(y+337);
	
	x0[164]=k*(x+336);
	y0[164]=k*(y+336);
	
	x0[165]=k*(x+339);
	y0[165]=k*(y+335);
	
	x0[166]=k*(x+343);
	y0[166]=k*(y+334);
	
	x0[167]=k*(x+346);
	y0[167]=k*(y+333);
	
	x0[168]=k*(x+349);
	y0[168]=k*(y+329);
	
	x0[169]=k*(x+354);
	y0[169]=k*(y+328);
	
	x0[170]=k*(x+357);
	y0[170]=k*(y+328);
	
	x0[171]=k*(x+362);
	y0[171]=k*(y+327);
	
	x0[172]=k*(x+363);
	y0[172]=k*(y+325);
	
	x0[173]=k*(x+366);
	y0[173]=k*(y+325); 
	
	
	//右前腿 
	for(i=0;i<38;i++)
	{
		x0[174+i]=k*(x+366);
		y0[174+i]=k*(y+326+i);
	}
 	
 	x0[212]=k*(x+368);
 	y0[212]=k*(y+363);
 	
 	x0[213]=k*(x+370);
 	y0[213]=k*(y+368);
 	
 	x0[214]=k*(x+377);
 	y0[214]=k*(y+372);
 	
 	x0[215]=k*(x+381);
 	y0[215]=k*(y+374);
 	
 	x0[216]=k*(x+386);
 	y0[216]=k*(y+373);
 	
 	x0[217]=k*(x+389);
 	y0[217]=k*(y+373);
 	
 	x0[218]=k*(x+387);
 	y0[218]=k*(y+373);
 	
 	x0[219]=k*(x+386);
 	y0[219]=k*(y+373);
 	
 	x0[220]=k*(x+387);
 	y0[220]=k*(y+370);
 	
 	x0[221]=k*(x+388);
 	y0[221]=k*(y+367);
 	
 	x0[222]=k*(x+389);
 	y0[222]=k*(y+360);
 	
 	x0[223]=k*(x+391);
	y0[223]=k*(y+324);
	
	x0[224]=k*(x+393);
	y0[224]=k*(y+315);
	
	x0[225]=k*(x+395);
	y0[225]=k*(y+315);
	
	x0[226]=k*(x+397);
	y0[226]=k*(y+315);
	
	x0[227]=k*(x+399);
	y0[227]=k*(y+315);
	
	x0[228]=k*(x+402);
	y0[228]=k*(y+314);
	
	x0[229]=k*(x+405);
	y0[229]=k*(y+313);
	
	x0[230]=k*(x+409);
	y0[230]=k*(y+322);
	
	x0[231]=k*(x+416);
	y0[231]=k*(y+321); 
 	
 	for(i=0;i<50;i++)
 	{
	 x0[232+i]=k*(x+416);
	 y0[232+i]=k*(y+321+i);	
	}
 	
 	x0[282]=k*(x+425);
 	y0[282]=k*(y+371);
 	
 	x0[283]=k*(x+430);
	y0[283]=k*(y+374);
	
	x0[284]=k*(x+434);
	y0[284]=k*(y+372);
	
	x0[285]=k*(x+435);
	y0[285]=k*(y+372);
	
	x0[286]=k*(x+441);
	y0[286]=k*(y+373); 
 	
 	for(i=0;i<60;i++)
 	{
		x0[287+i]=k*(x+441);
		y0[287+i]=k*(y+373-i);	 	
    }
 	
 	x0[347]=k*(x+443);
 	y0[347]=k*(y+310);
 	
 	x0[348]=k*(x+448);
	y0[348]=k*(y+300);
	
	x0[349]=k*(x+453);
	y0[349]=k*(y+290);
	
	x0[350]=k*(x+458);
	y0[350]=k*(y+280); 
	
	x0[351]=k*(x+461);
	y0[351]=k*(y+277);
	
	x0[352]=k*(x+463);
	y0[352]=k*(y+281);
	
	x0[353]=k*(x+465);
	y0[353]=k*(y+284);
	
	x0[354]=k*(x+469);
	y0[354]=k*(y+284);
	
	x0[355]=k*(x+472);
	y0[355]=k*(y+286);
	
	x0[356]=k*(x+476);
	y0[356]=k*(y+289);
	
	x0[357]=k*(x+481);
	y0[357]=k*(y+291);
	
	x0[358]=k*(x+485);
	y0[358]=k*(y+295);
	
	x0[359]=k*(x+494);
	y0[359]=k*(y+300);
	
	x0[360]=k*(x+500);
	y0[360]=k*(y+304); 
	
	x0[361]=k*(x+503);
	y0[361]=k*(y+299);
	
	x0[362]=k*(x+504);
	y0[362]=k*(y+295);
	
	x0[363]=k*(x+507);
	y0[363]=k*(y+291);
	
	x0[364]=k*(x+508);
	y0[364]=k*(y+288);
	
	x0[365]=k*(x+510);
	y0[365]=k*(y+284);
	
	x0[366]=k*(x+510);
	y0[366]=k*(y+282);
	
	x0[367]=k*(x+513);
	y0[367]=k*(y+279);
	
	x0[368]=k*(x+515);
	y0[368]=k*(y+275);
	
	x0[369]=k*(x+519);
	y0[369]=k*(y+271);
	
	x0[370]=k*(x+521);
	y0[370]=k*(y+261);
	
	x0[371]=k*(x+525);
	y0[371]=k*(y+247);
	
	x0[372]=k*(x+529);
	y0[372]=k*(y+242);
	
	x0[373]=k*(x+531);
	y0[373]=k*(y+236);
	
	x0[374]=k*(x+535);
	y0[374]=k*(y+230);
	
	x0[375]=k*(x+528);
	y0[375]=k*(y+227);
	
	x0[376]=k*(x+526);
	y0[376]=k*(y+226);
	
	x0[377]=k*(x+522);
	y0[377]=k*(y+225);
	
	x0[378]=k*(x+519);
	y0[378]=k*(y+226);
	
	x0[379]=k*(x+514);
	y0[379]=k*(y+223);
	
	x0[380]=k*(x+512);
	y0[380]=k*(y+221);
	
	x0[381]=k*(x+509);
	y0[381]=k*(y+221); 
	
	x0[382]=k*(x+506);
	y0[382]=k*(y+221);
	
	x0[383]=k*(x+498);
	y0[383]=k*(y+221);
	
	x0[384]=k*(x+491);
	y0[384]=k*(y+220);
	
	x0[385]=k*(x+486);
	y0[385]=k*(y+219);
	
	x0[386]=k*(x+483);
	y0[386]=k*(y+219);
	
	x0[387]=k*(x+481);
	y0[387]=k*(y+218); 
	
	x0[388]=k*(x+477);
	y0[388]=k*(y+215);
	
	x0[389]=k*(x+472);
	y0[389]=k*(y+215);
	
	x0[390]=k*(x+470);
	y0[390]=k*(y+211);
	
	x0[391]=k*(x+467);
	y0[391]=k*(y+208);
	
	x0[392]=k*(x+464);
	y0[392]=k*(y+206);
	
	x0[393]=k*(x+461);
	y0[393]=k*(y+204);
	
	x0[394]=k*(x+459);
	y0[394]=k*(y+202);
	
	x0[395]=k*(x+456);
	y0[395]=k*(y+199);
	
	x0[396]=k*(x+451);
	y0[396]=k*(y+198);
	
	x0[397]=k*(x+448);
	y0[397]=k*(y+196);
	
	x0[398]=k*(x+437);
	y0[398]=k*(y+190);
	
	x0[399]=k*(x+435);
	y0[399]=k*(y+185); 
	
	x0[400]=k*(x+434);
	y0[400]=k*(y+186);
	
	x0[401]=k*(x+432);
	y0[401]=k*(y+186);
	
	x0[402]=k*(x+430);
	y0[402]=k*(y+186);
	
	x0[403]=k*(x+428);
	y0[403]=k*(y+186);
	
	x0[404]=k*(x+427);
	y0[404]=k*(y+185);
	
	x0[405]=k*(x+421);
	y0[405]=k*(y+184);
	
	x0[406]=k*(x+415);
	y0[406]=k*(y+183);
	
	x0[407]=k*(x+412);
	y0[407]=k*(y+184);
	
	x0[408]=k*(x+408);
	y0[408]=k*(y+183);
	
	x0[409]=k*(x+395);
	y0[409]=k*(y+183);
	
	x0[410]=k*(x+391);
	y0[410]=k*(y+182);
	
	x0[411]=k*(x+387);
	y0[411]=k*(y+181);
	
	x0[412]=k*(x+385);
	y0[412]=k*(y+185);
	
	x0[413]=k*(x+385);
	y0[413]=k*(y+186);
	
	x0[414]=k*(x+385);
	y0[414]=k*(y+188);
	
	x0[415]=k*(x+385);
	y0[415]=k*(y+190);
	
	x0[416]=k*(x+385);
	y0[416]=k*(y+192);
	
	x0[417]=k*(x+385);
	y0[417]=k*(y+194);
	
	x0[418]=k*(x+385);
	y0[418]=k*(y+197);
	
	x0[419]=k*(x+385);
	y0[419]=k*(y+201);
	
	x0[420]=k*(x+385);
	y0[420]=k*(y+204);
	
	x0[421]=k*(x+386);
	y0[421]=k*(y+210);
	
	x0[422]=k*(x+386);
	y0[422]=k*(y+215);
	
	x0[423]=k*(x+386);
	y0[423]=k*(y+220);
	
	x0[424]=k*(x+386);
	y0[424]=k*(y+224); 
	
	x0[425]=k*(x+390);
	y0[425]=k*(y+229);
	
	x0[426]=k*(x+392);
	y0[426]=k*(y+233);
	
	x0[427]=k*(x+395);
	y0[427]=k*(y+234);
	
	x0[428]=k*(x+410);
	y0[428]=k*(y+235);
	
	x0[429]=k*(x+414);
	y0[429]=k*(y+238);
	
	x0[430]=k*(x+414);
	y0[430]=k*(y+244);
	
	x0[431]=k*(x+414);
	y0[431]=k*(y+245); 
	
 	//把初始顶点复原
 	for(i=0;i<432;i++)
 	{
 		x0[i]=x0[i]-(x+414)*(k-1);
 		y0[i]=y0[i]-(y+245)*(k-1);
 	}
 	
 	//把限制位置的坐标复原
	 
	posi[0]=posi[0]-(x+414)*(k-1);
	posi[1]=posi[1]-(x+414)*(k-1);
	posi[2]=posi[2]-(y+245)*(k-1); 
	posi[3]=posi[3]-(y+245)*(k-1); 
	
	if(j==0)
 	Bezier(color,432,page,x0,y0,0);
 	else
 	{
 	for(i=0;i<432;i++)
 	{
 		x0[i]=h-x0[i];
 		y0[i]=y0[i];
 	}
 		Bezier(color,432,page,x0,y0,0); 	
	}
 	//fill_1(color,page); 
 	} 
 	
 void dog_eyes(int x,int y,float k,int color,int page,int j)
{
	
 	x=x-414;
 	y=y-245;
 	
 	int h=(k*(x+500)-(x+414)*(k-1))*2;
 	if(j==0)    
 	circle_with_drawing(k*(x+458)-(x+414)*(k-1),k*(y+234)-(y+245)*(k-1),8*k,BLUE_,page,1);
 	else
 	circle_with_drawing(h-k*(x+458)+(x+414)*(k-1),k*(y+234)-(y+245)*(k-1),8*k,BLUE_,page,1); 	
}
	 
